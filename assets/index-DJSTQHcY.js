import{r as l,c as f,j as t,R as Y,T as Q,P as V,u as A,W as J,a as K,C as X,b as Z,S as ee,d as ae,D as te,e as x,O as oe,f as i,g as D,B as re}from"./index-DBdHDVH_.js";import{u as se,g as le,P as ne}from"./Problems-C-CXpF0g.js";var v="AlertDialog",[ie,we]=K(v,[f]),n=f(),y=a=>{const{__scopeAlertDialog:e,...o}=a,r=n(e);return t.jsx(Y,{...r,...o,modal:!0})};y.displayName=v;var ce="AlertDialogTrigger",N=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,s=n(o);return t.jsx(Q,{...s,...r,ref:e})});N.displayName=ce;var de="AlertDialogPortal",j=a=>{const{__scopeAlertDialog:e,...o}=a,r=n(e);return t.jsx(V,{...r,...o})};j.displayName=de;var pe="AlertDialogOverlay",h=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,s=n(o);return t.jsx(oe,{...s,...r,ref:e})});h.displayName=pe;var c="AlertDialogContent",[ge,me]=ie(c),R=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,children:r,...s}=a,g=n(o),p=l.useRef(null),B=A(e,p),m=l.useRef(null);return t.jsx(J,{contentName:c,titleName:C,docsSlug:"alert-dialog",children:t.jsx(ge,{scope:o,cancelRef:m,children:t.jsxs(X,{role:"alertdialog",...g,...s,ref:B,onOpenAutoFocus:Z(s.onOpenAutoFocus,d=>{var u;d.preventDefault(),(u=m.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[t.jsx(ee,{children:r}),t.jsx(fe,{contentRef:p})]})})})});R.displayName=c;var C="AlertDialogTitle",_=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,s=n(o);return t.jsx(ae,{...s,...r,ref:e})});_.displayName=C;var b="AlertDialogDescription",w=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,s=n(o);return t.jsx(te,{...s,...r,ref:e})});w.displayName=b;var ue="AlertDialogAction",E=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,s=n(o);return t.jsx(x,{...s,...r,ref:e})});E.displayName=ue;var S="AlertDialogCancel",P=l.forwardRef((a,e)=>{const{__scopeAlertDialog:o,...r}=a,{cancelRef:s}=me(S,o),g=n(o),p=A(e,s);return t.jsx(x,{...g,...r,ref:p})});P.displayName=S;var fe=({contentRef:a})=>{const e=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${b}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var r;document.getElementById((r=a.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(e)},[e,a]),null},Ae=y,xe=N,De=j,T=h,O=R,$=E,M=P,I=_,G=w;const ve=Ae,ye=xe,Ne=De,U=l.forwardRef(({className:a,...e},o)=>t.jsx(T,{className:i("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...e,ref:o}));U.displayName=T.displayName;const F=l.forwardRef(({className:a,...e},o)=>t.jsxs(Ne,{children:[t.jsx(U,{}),t.jsx(O,{ref:o,className:i("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),...e})]}));F.displayName=O.displayName;const L=({className:a,...e})=>t.jsx("div",{className:i("flex flex-col space-y-2 text-center sm:text-left",a),...e});L.displayName="AlertDialogHeader";const z=({className:a,...e})=>t.jsx("div",{className:i("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",a),...e});z.displayName="AlertDialogFooter";const H=l.forwardRef(({className:a,...e},o)=>t.jsx(I,{ref:o,className:i("text-lg font-semibold",a),...e}));H.displayName=I.displayName;const W=l.forwardRef(({className:a,...e},o)=>t.jsx(G,{ref:o,className:i("text-sm text-muted-foreground",a),...e}));W.displayName=G.displayName;const k=l.forwardRef(({className:a,...e},o)=>t.jsx($,{ref:o,className:i(D(),a),...e}));k.displayName=$.displayName;const q=l.forwardRef(({className:a,...e},o)=>t.jsx(M,{ref:o,className:i(D({variant:"outline"}),"mt-2 sm:mt-0",a),...e}));q.displayName=M.displayName;const je={},he=le`
    query GetUsername($name: String!) {
  getUser(name: $name) {
    name
  }
}
    `;function Re(a){const e={...je,...a};return se(he,e)}function Ce({username:a}){var s;const{data:e,loading:o,error:r}=Re({variables:{name:a}});return o?t.jsx("div",{children:"Loading..."}):r?t.jsxs("div",{children:["Error: ",r.message]}):(s=e==null?void 0:e.getUser)!=null&&s.name?e.getUser.name:"nojira user"}const Ee=function(){return t.jsxs("div",{className:"p-2",children:[t.jsx("h3",{children:"Welcome Home!"}),t.jsxs(ve,{children:[t.jsx(ye,{children:t.jsx(re,{children:"Click me!"})}),t.jsxs(F,{children:[t.jsxs(L,{children:[t.jsx(H,{children:"Are you absolutely sure?"}),t.jsx(W,{children:"Yo Gee! this is using Tailwind Css v4 and ShadCN - clean template"})]}),t.jsxs(z,{children:[t.jsx(q,{children:"Cancel"}),t.jsx(k,{children:"Continue"})]})]})]}),t.jsx(Ce,{username:"gsovereignty"}),t.jsx(ne,{})]})};export{Ee as component};
